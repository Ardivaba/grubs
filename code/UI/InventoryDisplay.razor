@namespace Grubs.UI

@using Grubs.Equipment
@using Grubs.Player
@using Sandbox;
@using Sandbox.UI;

@inherits PanelComponent

@if (Current is null || Next is null || Prev is null)
    return;

<root>
    @* <div class="item-title primary @EnabledClasses()">@Current.Name</div> *@
    <div class="items">
        <div class="item-container">
            <div class="item-box secondary">
                <img class="item-image secondary" src="@Prev.Icon"/>
                <InputGlyph class="secondary" button="prev_equipment" size="small"/>
            </div>
        </div>
        <div class="item-container">
            <div class="item-box primary">
                <img class="item-image primary" src="@Current.Icon"/>
            </div>
        </div>
        <div class="item-container">
            <div class="item-box secondary">
                <img class="item-image secondary" src="@Next.Icon"/>
                <InputGlyph class="secondary" button="next_equipment" size="small"/>
            </div>
        </div>
    </div>
</root>

@code
{
    [Property] public required PlayerInventory Inventory { get; set; }
    private EquipmentComponent? Current => Inventory.Equipment.ElementAtOrDefault(Inventory.ActiveSlot);
    private EquipmentComponent? Next => Inventory.Equipment.ElementAtOrDefault(Inventory.GetNextSlot());
    private EquipmentComponent? Prev => Inventory.Equipment.ElementAtOrDefault(Inventory.GetPrevSlot());


    private string EnabledClasses()
    {
        return Inventory.EquipmentActive ? "" : "disabled";
    }

    protected override void OnUpdate()
    {
        SetClass("hide", !Inventory.EquipmentActive);

        // foreach (var child in Panel.Children)
        //     child.SetClass("disabled", !Inventory.EquipmentActive);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Inventory.EquipmentActive, Inventory.ActiveSlot);
    }
}