@namespace Grubs.UI.GameLanding

@using Grubs.Gamemodes
@using Grubs.Pawn
@using Grubs.UI.Components
@inherits PanelComponent

<root>
    <Cursor/>
    <SceneBackground @ref="SceneBackground"/>
    <div @ref="MenuBody" class="body">
        <div class="upper">
            <div class="header">
                <label>Lobby</label>
            </div>
            <div class="gamemode-name">
                <label>@Gamemode.Current.GamemodeName</label>
            </div>
        </div>
        <div class="middle">
            <div class="player-cards">
                @foreach (var player in Player.All)
                {
                    <PlayerCard Player=@player/>
                }
            </div>
        </div>
        @if (IsHost() && CanStart())
        {
            <button class="start-button" onclick=@Start>Start</button>
        }
    </div>
</root>

@code
{
    public static GameLanding Instance { get; set; }

    public SceneBackground SceneBackground { get; set; }
    public Panel MenuBody { get; set; }

    public bool IsHost()
    {
        return Connection.Local == Connection.Host;
    }

    public bool CanStart()
    {
        return Connection.All.Count > 1 || Game.IsEditor;
    }

    public GameLanding()
    {
        Instance = this;
        Cursor.Enabled("menu", true);
    }


    private void Start()
    {
        if (IsHost())
            Gamemode.Current.Start();
    }

    protected override void OnUpdate()
    {
        base.OnUpdate();

        var hide = Gamemode.Current?.Started ?? false;
        Cursor.Enabled("menu", !hide);
        SceneBackground?.SetClass("hide", hide);
        MenuBody?.SetClass("hide", hide);
        SetClass("hide", hide);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(Connection.All?.Count, Player.All.Count());
    }
}