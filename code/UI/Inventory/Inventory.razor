@namespace Grubs.UI
@inherits Sandbox.UI.Panel
@attribute [StyleSheet]

@if (Game.LocalPawn is not Grubs.Player player)
{
    return;
}

<root class="@(_isOpen ? "open" : "")">
    <label class="name" text=@HoveredWeapon?.Name />
    <div class="items">
        @{
            var sortedWeapons = player.Inventory.Weapons.OrderByDescending(w => w.WeaponType == WeaponType.Weapon);
            @foreach (var weapon in sortedWeapons)
            {
                <InventorySlot 
                    Weapon=@weapon
                    Inventory=@this
                    @onmouseout=@(() => HoveredWeapon = null)
                    @onclick=@(() => OnInventorySlotClicked(weapon)) 
                />
            }
        }
    </div>
</root>

@code {
    public Weapon HoveredWeapon { get; set; }

    private bool _isOpen;
    private bool RequestOpen() => Game.LocalPawn is Grubs.Player player && Input.Down(InputAction.Inventory);
    private readonly int _totalAmmo = (Game.LocalPawn as Grubs.Player).Inventory.Weapons.Sum(x => x.Ammo);

    void OnInventorySlotClicked(Weapon weapon)
    {
        var player = Game.LocalPawn as Player;
        if (!player.IsValid())
            return;

        if (player.IsTurn && weapon.IsAvailable())
            player.ActiveWeaponInput = weapon;
    }

    public override void Tick()
    {
        _isOpen = RequestOpen();
        Cursor.Enabled("Inventory", _isOpen);
    }

    protected override int BuildHash()
    {
        return HashCode.Combine(_isOpen, HoveredWeapon?.GetHashCode(), _totalAmmo.GetHashCode());
    }
}